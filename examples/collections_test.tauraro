# Collections module test
import collections

print("=== Collections Module Test ===")

# Test Counter
counter = collections.Counter(['a', 'b', 'c', 'a', 'b', 'b'])
print("Counter:", counter)
print("Most common:", counter.most_common(2))

# Test Counter elements
print("Elements:", list(counter.elements()))

# Test Counter operations
counter1 = collections.Counter(['a', 'b', 'c'])
counter2 = collections.Counter(['a', 'b', 'b'])
print("Counter1:", counter1)
print("Counter2:", counter2)
print("Counter1 + Counter2:", counter1 + counter2)
print("Counter1 - Counter2:", counter1 - counter2)
print("Counter1 | Counter2:", counter1 | counter2)
print("Counter1 & Counter2:", counter1 & counter2)

# Test defaultdict
default_dict = collections.defaultdict(list)
default_dict['fruits'].append('apple')
default_dict['fruits'].append('banana')
default_dict['vegetables'].append('carrot')
print("DefaultDict:", dict(default_dict))

# Test deque
deque = collections.deque([1, 2, 3])
deque.append(4)
deque.appendleft(0)
print("Deque:", list(deque))
deque.rotate(1)
print("Rotated deque:", list(deque))

# Test deque operations
deque.extend([5, 6])
deque.extendleft([-1, -2])
print("Extended deque:", list(deque))

# Test deque maxlen
limited_deque = collections.deque([1, 2, 3], maxlen=5)
limited_deque.append(4)
limited_deque.append(5)
limited_deque.append(6)  # This should remove the leftmost element
print("Limited deque:", list(limited_deque))

# Test namedtuple
Point = collections.namedtuple('Point', ['x', 'y'])
p = Point(1, 2)
print("NamedTuple:", p)
print("NamedTuple x:", p.x)
print("NamedTuple y:", p.y)

# Test namedtuple operations
print("NamedTuple as dict:", p._asdict())
p2 = p._replace(y=3)
print("NamedTuple replace:", p2)

print("Collections module test completed successfully!")