#!/usr/bin/env tauraro
"""
Example: Control Flow

This example demonstrates various control flow structures
in TauraroLang including conditionals, loops, and branching.

Features demonstrated:
- If/else statements
- While loops
- For loops
- Break and continue statements
- Nested control structures
- Logical operators
- Comparison operators

Usage:
    tauraro run examples/basic/control_flow.tr
    
Requirements:
    - TauraroLang compiler/interpreter
"""

fn main() {
    print("=== Control Flow Demo ===")
    
    // If/else statements
    print("\n--- If/Else Statements ---")
    let age = 18
    if age >= 18 {
        print("You are an adult!")
    } else {
        print("You are a minor.")
    }
    
    // Multiple conditions
    let score = 85
    if score >= 90 {
        print("Grade: A")
    } else if score >= 80 {
        print("Grade: B")
    } else if score >= 70 {
        print("Grade: C")
    } else if score >= 60 {
        print("Grade: D")
    } else {
        print("Grade: F")
    }
    
    // Logical operators
    print("\n--- Logical Operators ---")
    let has_license = true
    let has_insurance = true
    let age_check = age >= 16
    
    if has_license && has_insurance && age_check {
        print("You can drive!")
    } else {
        print("You cannot drive.")
    }
    
    let is_weekend = false
    let is_holiday = true
    if is_weekend || is_holiday {
        print("No work today!")
    } else {
        print("Time to work.")
    }
    
    // While loops
    print("\n--- While Loops ---")
    let counter = 1
    print("Counting to 5:")
    while counter <= 5 {
        print("Count: " + str(counter))
        counter = counter + 1
    }
    
    // While loop with break
    print("\nFinding first number divisible by 7:")
    let number = 10
    while true {
        if number % 7 == 0 {
            print("Found: " + str(number))
            break
        }
        number = number + 1
    }
    
    // While loop with continue
    print("\nEven numbers from 1 to 10:")
    let i = 0
    while i < 10 {
        i = i + 1
        if i % 2 != 0 {
            continue
        }
        print(str(i))
    }
    
    // Nested loops
    print("\n--- Nested Loops ---")
    print("Multiplication table (3x3):")
    let row = 1
    while row <= 3 {
        let col = 1
        let line = ""
        while col <= 3 {
            line = line + str(row * col) + "\t"
            col = col + 1
        }
        print(line)
        row = row + 1
    }
    
    // Pattern matching with numbers
    print("\n--- Pattern Matching ---")
    let day = 3
    let day_name = ""
    if day == 1 {
        day_name = "Monday"
    } else if day == 2 {
        day_name = "Tuesday"
    } else if day == 3 {
        day_name = "Wednesday"
    } else if day == 4 {
        day_name = "Thursday"
    } else if day == 5 {
        day_name = "Friday"
    } else if day == 6 {
        day_name = "Saturday"
    } else if day == 7 {
        day_name = "Sunday"
    } else {
        day_name = "Invalid day"
    }
    print("Day " + str(day) + " is " + day_name)
    
    // Complex condition example
    print("\n--- Complex Conditions ---")
    let temperature = 25
    let humidity = 60
    let is_raining = false
    
    if temperature > 20 && temperature < 30 && humidity < 70 && !is_raining {
        print("Perfect weather for a picnic!")
    } else if temperature > 30 || humidity > 80 {
        print("Too hot or humid.")
    } else if is_raining {
        print("It's raining, stay inside.")
    } else {
        print("Weather is okay, but not perfect.")
    }
    
    // Loop with array-like iteration
    print("\n--- Array Iteration ---")
    let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    print("Processing numbers:")
    let index = 0
    while index < len(numbers) {
        let num = numbers[index]
        if num % 2 == 0 {
            print(str(num) + " is even")
        } else {
            print(str(num) + " is odd")
        }
        index = index + 1
    }
    
    // Early termination example
    print("\n--- Early Termination ---")
    print("Looking for number 7 in array:")
    let search_index = 0
    let found = false
    while search_index < len(numbers) {
        if numbers[search_index] == 7 {
            print("Found 7 at index " + str(search_index))
            found = true
            break
        }
        search_index = search_index + 1
    }
    
    if !found {
        print("Number 7 not found")
    }
}