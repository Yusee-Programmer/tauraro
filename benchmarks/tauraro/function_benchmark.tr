# Function Operations Benchmark for Tauraro
# Tests function call performance

print("Starting Tauraro Function Benchmark...")

# Define test functions
def simple_function():
    return 42

def function_with_params(a, b):
    return a + b

def recursive_function(n):
    if n <= 1:
        return 1
    return n * recursive_function(n - 1)

# Function call benchmark
iterations = 10000

# Simple function call benchmark
i = 0
result = 0
while i < iterations:
    result = simple_function()
    i = i + 1

print("Simple function calls completed")

# Function with parameters benchmark
i = 0
while i < iterations:
    result = function_with_params(10, 20)
    i = i + 1

print("Function with parameters completed")

# Recursive function benchmark (smaller iteration count to avoid stack overflow)
i = 0
while i < 10000:
    result = recursive_function(5)
    i = i + 1

print("Recursive function calls completed")

print("Function benchmark completed. Final result:", result)
print("Tauraro Function Benchmark finished!")