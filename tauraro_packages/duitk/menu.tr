# Menu functions for DUITK

# Import win32 module functions within functions to avoid circular dependencies
# This is the recommended approach for DUITK modules

# Function to create a menu
def create_menu():
    # Deferred import to avoid circular dependencies
    import win32
    
    # Create a new menu
    hmenu = win32.CreateMenu()
    
    return hmenu

# Function to create a popup menu
def create_popup_menu():
    # Deferred import to avoid circular dependencies
    import win32
    
    # Create a new popup menu
    hmenu = win32.CreatePopupMenu()
    
    return hmenu

# Function to append a menu item
def append_menu(hmenu: int, flags: int, id: int, text: str):
    # Deferred import to avoid circular dependencies
    import win32
    
    # Append a new menu item
    result = win32.AppendMenu(hmenu, flags, id, text)
    
    return result

# Function to set menu for a window
def set_menu(hwnd: int, hmenu: int):
    # Deferred import to avoid circular dependencies
    import win32
    
    # Set menu for window
    result = win32.SetMenu(hwnd, hmenu)
    
    return result

# Function to destroy a menu
def destroy_menu(hmenu: int):
    # Deferred import to avoid circular dependencies
    import win32
    
    # Destroy menu
    result = win32.DestroyMenu(hmenu)
    
    return result
