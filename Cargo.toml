[package]
name = "tauraro"
version = "0.2.0"
edition = "2021"
description = "Tauraro Programming Language - A modern, high-performance programming language with 100% Python syntax compatibility and multilingual support"
license = "MIT OR Apache-2.0"
authors = ["TauraroLang Team"]
repository = "https://github.com/taurarolang/tauraro"

[dependencies]
logos = "0.14"
thiserror = "1.0"
log = "0.4"
env_logger = "0.11"
clap = { version = "4.4", features = ["derive"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
indexmap = "2.0"
unicode-segmentation = "1.10"
smallvec = "1.13"

# Optional backends
llvm-sys = { version = "170.0", optional = true }
inkwell = { version = "0.4", optional = true }
wasmer = { version = "4.2", optional = true }
object = { version = "0.32", optional = true }
cranelift = { version = "0.119", optional = true }
cranelift-codegen = { version = "0.119", optional = true }
cranelift-frontend = { version = "0.119", optional = true }
cranelift-jit = { version = "0.119", optional = true }

# For C code generation and FFI
tempfile = "3.8"
libffi = { version = "3.2", optional = true }
libloading = { version = "0.8", optional = true }
winapi = { version = "0.3", features = ["libloaderapi"], optional = true }
bincode = "1.3"
cc = "1.0"

# Python interop
pyo3 = { version = "0.20", features = ["auto-initialize", "macros"], optional = true }

# Async runtime
tokio = { version = "1.0", features = ["full"], optional = true }
chrono = { version = "0.4.42", features = ["serde"] }
rustyline = "10.0.0"
rustyline-derive = "0.7.0"
lazy_static = "1.4"
rand = "0.8.5"

# Regular expressions
regex = "1.10"

# URL parsing
url = "2.4"

# System library for Unix systems
libc = "0.2"

# Hostname for socket module
hostname = "0.3"

# HTTP and WebSocket libraries
hyper = { version = "1.0", features = ["full"], optional = true }
reqwest = { version = "0.11", features = ["json", "stream"], optional = true }
tungstenite = { version = "0.21", optional = true }
tokio-tungstenite = { version = "0.21", optional = true }
http = "1.0"
httparse = "1.8"
futures = { version = "0.3", optional = true }

# Cryptographic hashing
sha1 = "0.10"
sha2 = "0.10"
sha3 = "0.10"
md5 = { package = "md-5", version = "0.10" }

[features]
default = ["interpreter", "async", "clang", "http"]
interpreter = []  # VM-based execution
llvm = ["dep:llvm-sys", "dep:inkwell"]  # LLVM backend
wasm = ["dep:wasmer", "dep:object"]  # WebAssembly backend
c-backend = []  # C code generation backend
clang = []  # Clang backend for native compilation
gcc = []  # GCC backend for native compilation
ffi = ["dep:libffi", "dep:libloading", "dep:winapi"]  # Foreign Function Interface
python-interop = ["dep:pyo3"]  # Python interoperability
async = ["dep:tokio", "dep:futures"]  # Async/await support
http = ["dep:hyper", "dep:reqwest", "dep:tungstenite", "dep:tokio-tungstenite"]  # HTTP and WebSocket support
jit = ["dep:cranelift", "dep:cranelift-codegen", "dep:cranelift-frontend", "dep:cranelift-jit"]  # JIT compilation with Cranelift
test-llvm = []  # Feature for testing LLVM backend
type_checking = []  # Runtime type checking support

[dev-dependencies]
pretty_assertions = "1.4"

[[bin]]
name = "tauraro"
path = "src/main.rs"

[[bin]]
name = "test_oop"
path = "src/bin/test_oop.rs"