# Advanced FFI Test Script for TauraroLang
# This script tests various FFI functions with different signatures

# External function declarations
extern reverse_string: string_string
extern string_length: string_int
extern concatenate_strings: string_string_string
extern power_function: double_double_double
extern square_root: double_double
extern factorial: int_int
extern fibonacci: int_int
extern is_prime: int_int
extern celsius_to_fahrenheit: double_double
extern fahrenheit_to_celsius: double_double
extern random_int: int_int_int
extern random_double: void_double
extern get_current_year: void_int
extern get_library_version: void_string

# Test string manipulation functions
print("=== Testing String Manipulation Functions ===")

test_string = "Hello World"
print("Original string: " + test_string)

reversed = reverse_string(test_string)
print("Reversed string: " + reversed)

length = string_length(test_string)
print("String length: " + str(length))

str1 = "Hello "
str2 = "FFI!"
concatenated = concatenate_strings(str1, str2)
print("Concatenated: " + concatenated)

# Test mathematical functions
print("\n=== Testing Mathematical Functions ===")

base = 2.0
exponent = 3.0
power_result = power_function(base, exponent)
print("Power function: " + str(base) + "^" + str(exponent) + " = " + str(power_result))

number = 16.0
sqrt_result = square_root(number)
print("Square root of " + str(number) + " = " + str(sqrt_result))

n = 5
fact_result = factorial(n)
print("Factorial of " + str(n) + " = " + str(fact_result))

fib_n = 10
fib_result = fibonacci(fib_n)
print("Fibonacci of " + str(fib_n) + " = " + str(fib_result))

prime_test = 17
is_prime_result = is_prime(prime_test)
if is_prime_result == 1:
    print(str(prime_test) + " is prime")
else:
    print(str(prime_test) + " is not prime")

# Test temperature conversion functions
print("\n=== Testing Temperature Conversion ===")

celsius = 25.0
fahrenheit = celsius_to_fahrenheit(celsius)
print(str(celsius) + "째C = " + str(fahrenheit) + "째F")

fahrenheit_temp = 77.0
celsius_temp = fahrenheit_to_celsius(fahrenheit_temp)
print(str(fahrenheit_temp) + "째F = " + str(celsius_temp) + "째C")

# Test utility functions
print("\n=== Testing Utility Functions ===")

min_val = 1
max_val = 100
random_value = random_int(min_val, max_val)
print("Random integer between " + str(min_val) + " and " + str(max_val) + ": " + str(random_value))

random_double_value = random_double()
print("Random double: " + str(random_double_value))

current_year = get_current_year()
print("Current year: " + str(current_year))

lib_version = get_library_version()
print("Library version: " + lib_version)

print("\n=== FFI Test Complete ===")
print("All FFI functions have been tested successfully!")